from pyramid.request import Request
from unittest import TestCase

from {{package}} import SettingsParser
from {{package}}.libraries.tools import make_random_unique_string, get_remote_ip
from {{package}}.models import CaseInsensitiveUnicode


class TestMiscellaneous(TestCase):

    def test_SettingsParser_cannot_find_file(self):
        SettingsParser().load('xxx')

    def test_make_random_unique_string_hits_limits(self):
        self.assertRaises(RuntimeError, make_random_unique_string, 1, lambda x: False)

    def test_get_remote_ip_works(self):
        ip = '127.0.0.1'
        self.assertEqual(get_remote_ip(Request({'HTTP_X_REAL_IP': ip})), ip)
        self.assertEqual(get_remote_ip(Request({'HTTP_X_FORWARDED_FOR': ip})), ip)
        self.assertEqual(get_remote_ip(Request({'REMOTE_ADDR': ip})), ip)

    def test_case_insensitive_comparisons_work(self):
        x = CaseInsensitiveUnicode('xxx')
        X = CaseInsensitiveUnicode('XXX')
        self.assertEqual(x < X, False)
        self.assertEqual(x <= X, True)
        self.assertEqual(x == X, True)
        self.assertEqual(x != X, False)
        self.assertEqual(x > X, False)
        self.assertEqual(x >= X, True)
