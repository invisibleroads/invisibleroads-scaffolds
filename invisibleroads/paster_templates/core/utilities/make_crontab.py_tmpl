'Command-line script to generate server crontab file'
import os

from script_process import ArgumentParser, initialize
from {{package}} import parameters


def run(settings):
    basePath = os.path.abspath(settings['here'])
    headerCommand = 'source %s/bin/activate; cd %s' % (
        os.environ['VIRTUAL_ENV'],
        basePath)
    lines = [
        '# Start server',
        '%s * * * * %s; python utilities/serve.py -c production.ini -q >> server.log 2>&1' % (
            format_minutes(parameters.SERVER_INTERVAL_MINUTES, minuteStart=15), 
            headerCommand),
        '# Check outbox',
        '%s * * * * %s; qp --config .production.ini >> qp.log 2>&1' % (
            format_minutes(parameters.OUTBOX_INTERVAL_MINUTES, minuteStart=10), 
            headerCommand),
        '# Process SMS',
        '%s * * * * %s; python utilities/sms.py -c production.ini -q >> sms.log 2>&1' % (
            format_minutes(parameters.SMS_INTERVAL_MINUTES, minuteStart=5), 
            headerCommand),
    ]
    crontabPath = os.path.join(basePath, 'server.crt')
    open(crontabPath, 'wt').write('\n'.join(lines) + '\n')
    return 'Generated %s' % crontabPath


def format_minutes(intervalMinutes, minuteStart=0):
    'Format minutes for crontab'
    if intervalMinutes == 1:
        return '*'
    return '%s-59/%s' % (minuteStart, intervalMinutes)


if __name__ == '__main__':
    argumentParser = ArgumentParser(
        description='Generate server.crt')
    args = argumentParser.parse_args()
    message = run(initialize(args))
    if args.verbose:
        print message
