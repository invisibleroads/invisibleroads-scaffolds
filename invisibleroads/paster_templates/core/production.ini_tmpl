[app:main]
use = egg:{{project}}

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
pyramid.default_locale_name = en
pyramid.includes = pyramid_tm

sqlalchemy.url = sqlite:///%(here)s/production.db

cache.type = memory
cache.short.expire = 1800
cache.medium.expire = 7200
cache.long.expire = 86400

data.path = %(here)s/data
session.type = file
session.key = {{project}}
session.httponly = true
session.data_dir = %(data.path)s/sessions/data
session.lock_dir = %(data.path)s/sessions/lock
mail.queue_path = %(data.path)s/messages

# Store sensitive information in .production.ini
; [app:main]
; authtkt.secret = {{random_string}}
; session.secret = {{random_string}}
; ciphers.secret = {{random_string}}
; recaptcha.public = 
; recaptcha.private = 
sms.email = sms@example.com
; sms.imap.host = localhost
; sms.imap.port = 25
; sms.imap.username =
; sms.imap.password =
mail.default_sender = {{project}} <support@example.com>
; 
; [app:qp]
; hostname = localhost
; port = 25
; username =
; password =
; force_tls = true
; no_tls = false
; queue_path = data/messages
; debug_smtp = false

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, {{package_logger}}, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_{{package_logger}}]
level = WARN
handlers =
qualname = {{package}}

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
